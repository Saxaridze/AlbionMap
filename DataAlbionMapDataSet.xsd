<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataAlbionMapDataSet" targetNamespace="http://tempuri.org/DataAlbionMapDataSet.xsd" xmlns:mstns="http://tempuri.org/DataAlbionMapDataSet.xsd" xmlns="http://tempuri.org/DataAlbionMapDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DataAlbionMapConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DataAlbionMapConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.AlbionMap.Properties.Settings.GlobalReference.Default.DataAlbionMapConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LocationAndResourceTableAdapter" GeneratorDataComponentClassName="LocationAndResourceTableAdapter" Name="LocationAndResource" UserDataComponentName="LocationAndResourceTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataAlbionMapConnectionString (Settings)" DbObjectName="DataAlbionMap.dbo.LocationAndResource" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[LocationAndResource] WHERE (([IDMainLocation] = @Original_IDMainLocation) AND ([IDTypeOfLocation] = @Original_IDTypeOfLocation))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDMainLocation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDMainLocation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDTypeOfLocation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDTypeOfLocation" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[LocationAndResource] ([IDMainLocation], [IDTypeOfLocation]) VALUES (@IDMainLocation, @IDTypeOfLocation);
SELECT IDMainLocation, IDTypeOfLocation FROM LocationAndResource WHERE (IDMainLocation = @IDMainLocation) AND (IDTypeOfLocation = @IDTypeOfLocation)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDMainLocation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDMainLocation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDTypeOfLocation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDTypeOfLocation" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDMainLocation, IDTypeOfLocation FROM dbo.LocationAndResource</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[LocationAndResource] SET [IDMainLocation] = @IDMainLocation, [IDTypeOfLocation] = @IDTypeOfLocation WHERE (([IDMainLocation] = @Original_IDMainLocation) AND ([IDTypeOfLocation] = @Original_IDTypeOfLocation));
SELECT IDMainLocation, IDTypeOfLocation FROM LocationAndResource WHERE (IDMainLocation = @IDMainLocation) AND (IDTypeOfLocation = @IDTypeOfLocation)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDMainLocation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDMainLocation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDTypeOfLocation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDTypeOfLocation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDMainLocation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDMainLocation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDTypeOfLocation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDTypeOfLocation" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDMainLocation" DataSetColumn="IDMainLocation" />
              <Mapping SourceColumn="IDTypeOfLocation" DataSetColumn="IDTypeOfLocation" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MainLocationTableAdapter" GeneratorDataComponentClassName="MainLocationTableAdapter" Name="MainLocation" UserDataComponentName="MainLocationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataAlbionMapConnectionString (Settings)" DbObjectName="DataAlbionMap.dbo.MainLocation" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MainLocation] WHERE (([ID] = @Original_ID) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ((@IsNull_IDRegion = 1 AND [IDRegion] IS NULL) OR ([IDRegion] = @Original_IDRegion)) AND ((@IsNull_LevelLocation = 1 AND [LevelLocation] IS NULL) OR ([LevelLocation] = @Original_LevelLocation)) AND ((@IsNull_Enchantment = 1 AND [Enchantment] IS NULL) OR ([Enchantment] = @Original_Enchantment)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IDRegion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDRegion" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDRegion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDRegion" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LevelLocation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LevelLocation" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LevelLocation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelLocation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Enchantment" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Enchantment" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Enchantment" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Enchantment" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MainLocation] ([ID], [Name], [IDRegion], [LevelLocation], [Enchantment]) VALUES (@ID, @Name, @IDRegion, @LevelLocation, @Enchantment);
SELECT ID, Name, IDRegion, LevelLocation, Enchantment FROM MainLocation WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDRegion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDRegion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LevelLocation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelLocation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Enchantment" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Enchantment" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Name, IDRegion, LevelLocation, Enchantment FROM dbo.MainLocation</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MainLocation] SET [ID] = @ID, [Name] = @Name, [IDRegion] = @IDRegion, [LevelLocation] = @LevelLocation, [Enchantment] = @Enchantment WHERE (([ID] = @Original_ID) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ((@IsNull_IDRegion = 1 AND [IDRegion] IS NULL) OR ([IDRegion] = @Original_IDRegion)) AND ((@IsNull_LevelLocation = 1 AND [LevelLocation] IS NULL) OR ([LevelLocation] = @Original_LevelLocation)) AND ((@IsNull_Enchantment = 1 AND [Enchantment] IS NULL) OR ([Enchantment] = @Original_Enchantment)));
SELECT ID, Name, IDRegion, LevelLocation, Enchantment FROM MainLocation WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDRegion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDRegion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LevelLocation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelLocation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Enchantment" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Enchantment" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IDRegion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDRegion" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDRegion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDRegion" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LevelLocation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LevelLocation" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LevelLocation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelLocation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Enchantment" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Enchantment" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Enchantment" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Enchantment" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="IDRegion" DataSetColumn="IDRegion" />
              <Mapping SourceColumn="LevelLocation" DataSetColumn="LevelLocation" />
              <Mapping SourceColumn="Enchantment" DataSetColumn="Enchantment" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TypeOfFiberTableAdapter" GeneratorDataComponentClassName="TypeOfFiberTableAdapter" Name="TypeOfFiber" UserDataComponentName="TypeOfFiberTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataAlbionMapConnectionString (Settings)" DbObjectName="DataAlbionMap.dbo.TypeOfFiber" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TypeOfFiber] WHERE (([ID] = @Original_ID) AND ((@IsNull_NameFiber = 1 AND [NameFiber] IS NULL) OR ([NameFiber] = @Original_NameFiber)) AND ((@IsNull_LevelFiber = 1 AND [LevelFiber] IS NULL) OR ([LevelFiber] = @Original_LevelFiber)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NameFiber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NameFiber" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameFiber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameFiber" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LevelFiber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LevelFiber" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LevelFiber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelFiber" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TypeOfFiber] ([ID], [NameFiber], [LevelFiber], [Image]) VALUES (@ID, @NameFiber, @LevelFiber, @Image);
SELECT ID, NameFiber, LevelFiber, Image FROM TypeOfFiber WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameFiber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameFiber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LevelFiber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelFiber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Image" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, NameFiber, LevelFiber, Image FROM dbo.TypeOfFiber</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TypeOfFiber] SET [ID] = @ID, [NameFiber] = @NameFiber, [LevelFiber] = @LevelFiber, [Image] = @Image WHERE (([ID] = @Original_ID) AND ((@IsNull_NameFiber = 1 AND [NameFiber] IS NULL) OR ([NameFiber] = @Original_NameFiber)) AND ((@IsNull_LevelFiber = 1 AND [LevelFiber] IS NULL) OR ([LevelFiber] = @Original_LevelFiber)));
SELECT ID, NameFiber, LevelFiber, Image FROM TypeOfFiber WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameFiber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameFiber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LevelFiber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelFiber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Image" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NameFiber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NameFiber" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameFiber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameFiber" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LevelFiber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LevelFiber" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LevelFiber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelFiber" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="NameFiber" DataSetColumn="NameFiber" />
              <Mapping SourceColumn="LevelFiber" DataSetColumn="LevelFiber" />
              <Mapping SourceColumn="Image" DataSetColumn="Image" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TypeOfHideTableAdapter" GeneratorDataComponentClassName="TypeOfHideTableAdapter" Name="TypeOfHide" UserDataComponentName="TypeOfHideTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataAlbionMapConnectionString (Settings)" DbObjectName="DataAlbionMap.dbo.TypeOfHide" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TypeOfHide] WHERE (([ID] = @Original_ID) AND ((@IsNull_NameHide = 1 AND [NameHide] IS NULL) OR ([NameHide] = @Original_NameHide)) AND ((@IsNull_LevelHide = 1 AND [LevelHide] IS NULL) OR ([LevelHide] = @Original_LevelHide)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NameHide" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NameHide" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameHide" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameHide" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LevelHide" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LevelHide" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LevelHide" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelHide" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TypeOfHide] ([ID], [NameHide], [LevelHide], [Image]) VALUES (@ID, @NameHide, @LevelHide, @Image);
SELECT ID, NameHide, LevelHide, Image FROM TypeOfHide WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameHide" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameHide" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LevelHide" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelHide" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Image" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, NameHide, LevelHide, Image FROM dbo.TypeOfHide</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TypeOfHide] SET [ID] = @ID, [NameHide] = @NameHide, [LevelHide] = @LevelHide, [Image] = @Image WHERE (([ID] = @Original_ID) AND ((@IsNull_NameHide = 1 AND [NameHide] IS NULL) OR ([NameHide] = @Original_NameHide)) AND ((@IsNull_LevelHide = 1 AND [LevelHide] IS NULL) OR ([LevelHide] = @Original_LevelHide)));
SELECT ID, NameHide, LevelHide, Image FROM TypeOfHide WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameHide" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameHide" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LevelHide" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelHide" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Image" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NameHide" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NameHide" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameHide" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameHide" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LevelHide" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LevelHide" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LevelHide" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelHide" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="NameHide" DataSetColumn="NameHide" />
              <Mapping SourceColumn="LevelHide" DataSetColumn="LevelHide" />
              <Mapping SourceColumn="Image" DataSetColumn="Image" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TypeOfLocationTableAdapter" GeneratorDataComponentClassName="TypeOfLocationTableAdapter" Name="TypeOfLocation" UserDataComponentName="TypeOfLocationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataAlbionMapConnectionString (Settings)" DbObjectName="DataAlbionMap.dbo.TypeOfLocation" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TypeOfLocation] WHERE (([ID] = @Original_ID) AND ((@IsNull_NameLocation = 1 AND [NameLocation] IS NULL) OR ([NameLocation] = @Original_NameLocation)) AND ((@IsNull_IfWood = 1 AND [IfWood] IS NULL) OR ([IfWood] = @Original_IfWood)) AND ((@IsNull_IfStone = 1 AND [IfStone] IS NULL) OR ([IfStone] = @Original_IfStone)) AND ((@IsNull_IfHide = 1 AND [IfHide] IS NULL) OR ([IfHide] = @Original_IfHide)) AND ((@IsNull_IfFiber = 1 AND [IfFiber] IS NULL) OR ([IfFiber] = @Original_IfFiber)) AND ((@IsNull_IfOre = 1 AND [IfOre] IS NULL) OR ([IfOre] = @Original_IfOre)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NameLocation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NameLocation" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameLocation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameLocation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IfWood" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfWood" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IfWood" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfWood" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IfStone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfStone" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IfStone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfStone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IfHide" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfHide" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IfHide" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfHide" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IfFiber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfFiber" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IfFiber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfFiber" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IfOre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfOre" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IfOre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfOre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TypeOfLocation] ([ID], [NameLocation], [IfWood], [IfStone], [IfHide], [IfFiber], [IfOre]) VALUES (@ID, @NameLocation, @IfWood, @IfStone, @IfHide, @IfFiber, @IfOre);
SELECT ID, NameLocation, IfWood, IfStone, IfHide, IfFiber, IfOre FROM TypeOfLocation WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameLocation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameLocation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IfWood" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfWood" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IfStone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfStone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IfHide" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfHide" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IfFiber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfFiber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IfOre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfOre" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, NameLocation, IfWood, IfStone, IfHide, IfFiber, IfOre FROM dbo.TypeOfLocation</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TypeOfLocation] SET [ID] = @ID, [NameLocation] = @NameLocation, [IfWood] = @IfWood, [IfStone] = @IfStone, [IfHide] = @IfHide, [IfFiber] = @IfFiber, [IfOre] = @IfOre WHERE (([ID] = @Original_ID) AND ((@IsNull_NameLocation = 1 AND [NameLocation] IS NULL) OR ([NameLocation] = @Original_NameLocation)) AND ((@IsNull_IfWood = 1 AND [IfWood] IS NULL) OR ([IfWood] = @Original_IfWood)) AND ((@IsNull_IfStone = 1 AND [IfStone] IS NULL) OR ([IfStone] = @Original_IfStone)) AND ((@IsNull_IfHide = 1 AND [IfHide] IS NULL) OR ([IfHide] = @Original_IfHide)) AND ((@IsNull_IfFiber = 1 AND [IfFiber] IS NULL) OR ([IfFiber] = @Original_IfFiber)) AND ((@IsNull_IfOre = 1 AND [IfOre] IS NULL) OR ([IfOre] = @Original_IfOre)));
SELECT ID, NameLocation, IfWood, IfStone, IfHide, IfFiber, IfOre FROM TypeOfLocation WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameLocation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameLocation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IfWood" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfWood" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IfStone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfStone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IfHide" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfHide" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IfFiber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfFiber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IfOre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfOre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NameLocation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NameLocation" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameLocation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameLocation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IfWood" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfWood" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IfWood" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfWood" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IfStone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfStone" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IfStone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfStone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IfHide" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfHide" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IfHide" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfHide" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IfFiber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfFiber" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IfFiber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfFiber" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IfOre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfOre" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IfOre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IfOre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="NameLocation" DataSetColumn="NameLocation" />
              <Mapping SourceColumn="IfWood" DataSetColumn="IfWood" />
              <Mapping SourceColumn="IfStone" DataSetColumn="IfStone" />
              <Mapping SourceColumn="IfHide" DataSetColumn="IfHide" />
              <Mapping SourceColumn="IfFiber" DataSetColumn="IfFiber" />
              <Mapping SourceColumn="IfOre" DataSetColumn="IfOre" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TypeOfOreTableAdapter" GeneratorDataComponentClassName="TypeOfOreTableAdapter" Name="TypeOfOre" UserDataComponentName="TypeOfOreTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataAlbionMapConnectionString (Settings)" DbObjectName="DataAlbionMap.dbo.TypeOfOre" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TypeOfOre] WHERE (([ID] = @Original_ID) AND ((@IsNull_NameOre = 1 AND [NameOre] IS NULL) OR ([NameOre] = @Original_NameOre)) AND ((@IsNull_LevelOre = 1 AND [LevelOre] IS NULL) OR ([LevelOre] = @Original_LevelOre)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NameOre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NameOre" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameOre" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameOre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LevelOre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LevelOre" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LevelOre" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelOre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TypeOfOre] ([ID], [NameOre], [LevelOre], [Image]) VALUES (@ID, @NameOre, @LevelOre, @Image);
SELECT ID, NameOre, LevelOre, Image FROM TypeOfOre WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameOre" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameOre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LevelOre" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelOre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Image" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, NameOre, LevelOre, Image FROM dbo.TypeOfOre</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TypeOfOre] SET [ID] = @ID, [NameOre] = @NameOre, [LevelOre] = @LevelOre, [Image] = @Image WHERE (([ID] = @Original_ID) AND ((@IsNull_NameOre = 1 AND [NameOre] IS NULL) OR ([NameOre] = @Original_NameOre)) AND ((@IsNull_LevelOre = 1 AND [LevelOre] IS NULL) OR ([LevelOre] = @Original_LevelOre)));
SELECT ID, NameOre, LevelOre, Image FROM TypeOfOre WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameOre" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameOre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LevelOre" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelOre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Image" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NameOre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NameOre" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameOre" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameOre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LevelOre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LevelOre" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LevelOre" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelOre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="NameOre" DataSetColumn="NameOre" />
              <Mapping SourceColumn="LevelOre" DataSetColumn="LevelOre" />
              <Mapping SourceColumn="Image" DataSetColumn="Image" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TypeOfRegionTableAdapter" GeneratorDataComponentClassName="TypeOfRegionTableAdapter" Name="TypeOfRegion" UserDataComponentName="TypeOfRegionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataAlbionMapConnectionString (Settings)" DbObjectName="DataAlbionMap.dbo.TypeOfRegion" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TypeOfRegion] WHERE (([ID] = @Original_ID) AND ((@IsNull_NameRegion = 1 AND [NameRegion] IS NULL) OR ([NameRegion] = @Original_NameRegion)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NameRegion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NameRegion" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameRegion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameRegion" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TypeOfRegion] ([ID], [NameRegion], [Image]) VALUES (@ID, @NameRegion, @Image);
SELECT ID, NameRegion, Image FROM TypeOfRegion WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameRegion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameRegion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Image" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, NameRegion, Image FROM dbo.TypeOfRegion</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TypeOfRegion] SET [ID] = @ID, [NameRegion] = @NameRegion, [Image] = @Image WHERE (([ID] = @Original_ID) AND ((@IsNull_NameRegion = 1 AND [NameRegion] IS NULL) OR ([NameRegion] = @Original_NameRegion)));
SELECT ID, NameRegion, Image FROM TypeOfRegion WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameRegion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameRegion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Image" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NameRegion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NameRegion" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameRegion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameRegion" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="NameRegion" DataSetColumn="NameRegion" />
              <Mapping SourceColumn="Image" DataSetColumn="Image" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TypeOfStoneTableAdapter" GeneratorDataComponentClassName="TypeOfStoneTableAdapter" Name="TypeOfStone" UserDataComponentName="TypeOfStoneTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataAlbionMapConnectionString (Settings)" DbObjectName="DataAlbionMap.dbo.TypeOfStone" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TypeOfStone] WHERE (([ID] = @Original_ID) AND ((@IsNull_NameStone = 1 AND [NameStone] IS NULL) OR ([NameStone] = @Original_NameStone)) AND ((@IsNull_LevelStone = 1 AND [LevelStone] IS NULL) OR ([LevelStone] = @Original_LevelStone)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NameStone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NameStone" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameStone" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameStone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LevelStone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LevelStone" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LevelStone" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelStone" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TypeOfStone] ([ID], [NameStone], [LevelStone], [Image]) VALUES (@ID, @NameStone, @LevelStone, @Image);
SELECT ID, NameStone, LevelStone, Image FROM TypeOfStone WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameStone" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameStone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LevelStone" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelStone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Image" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, NameStone, LevelStone, Image FROM dbo.TypeOfStone</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TypeOfStone] SET [ID] = @ID, [NameStone] = @NameStone, [LevelStone] = @LevelStone, [Image] = @Image WHERE (([ID] = @Original_ID) AND ((@IsNull_NameStone = 1 AND [NameStone] IS NULL) OR ([NameStone] = @Original_NameStone)) AND ((@IsNull_LevelStone = 1 AND [LevelStone] IS NULL) OR ([LevelStone] = @Original_LevelStone)));
SELECT ID, NameStone, LevelStone, Image FROM TypeOfStone WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameStone" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameStone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LevelStone" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelStone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Image" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NameStone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NameStone" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameStone" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameStone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LevelStone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LevelStone" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LevelStone" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelStone" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="NameStone" DataSetColumn="NameStone" />
              <Mapping SourceColumn="LevelStone" DataSetColumn="LevelStone" />
              <Mapping SourceColumn="Image" DataSetColumn="Image" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TypeOfWoodTableAdapter" GeneratorDataComponentClassName="TypeOfWoodTableAdapter" Name="TypeOfWood" UserDataComponentName="TypeOfWoodTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataAlbionMapConnectionString (Settings)" DbObjectName="DataAlbionMap.dbo.TypeOfWood" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TypeOfWood] WHERE (([ID] = @Original_ID) AND ((@IsNull_NameWood = 1 AND [NameWood] IS NULL) OR ([NameWood] = @Original_NameWood)) AND ((@IsNull_LevelWood = 1 AND [LevelWood] IS NULL) OR ([LevelWood] = @Original_LevelWood)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NameWood" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NameWood" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameWood" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameWood" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LevelWood" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LevelWood" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LevelWood" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelWood" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TypeOfWood] ([ID], [NameWood], [LevelWood], [Image]) VALUES (@ID, @NameWood, @LevelWood, @Image);
SELECT ID, NameWood, LevelWood, Image FROM TypeOfWood WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameWood" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameWood" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LevelWood" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelWood" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Image" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, NameWood, LevelWood, Image FROM dbo.TypeOfWood</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TypeOfWood] SET [ID] = @ID, [NameWood] = @NameWood, [LevelWood] = @LevelWood, [Image] = @Image WHERE (([ID] = @Original_ID) AND ((@IsNull_NameWood = 1 AND [NameWood] IS NULL) OR ([NameWood] = @Original_NameWood)) AND ((@IsNull_LevelWood = 1 AND [LevelWood] IS NULL) OR ([LevelWood] = @Original_LevelWood)));
SELECT ID, NameWood, LevelWood, Image FROM TypeOfWood WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameWood" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameWood" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LevelWood" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelWood" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Image" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="Image" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NameWood" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NameWood" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameWood" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameWood" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LevelWood" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LevelWood" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LevelWood" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LevelWood" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="NameWood" DataSetColumn="NameWood" />
              <Mapping SourceColumn="LevelWood" DataSetColumn="LevelWood" />
              <Mapping SourceColumn="Image" DataSetColumn="Image" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataAlbionMapDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DataAlbionMapDataSet" msprop:Generator_UserDSName="DataAlbionMapDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="LocationAndResource" msprop:Generator_TableClassName="LocationAndResourceDataTable" msprop:Generator_TableVarName="tableLocationAndResource" msprop:Generator_TablePropName="LocationAndResource" msprop:Generator_RowDeletingName="LocationAndResourceRowDeleting" msprop:Generator_RowChangingName="LocationAndResourceRowChanging" msprop:Generator_RowEvHandlerName="LocationAndResourceRowChangeEventHandler" msprop:Generator_RowDeletedName="LocationAndResourceRowDeleted" msprop:Generator_UserTableName="LocationAndResource" msprop:Generator_RowChangedName="LocationAndResourceRowChanged" msprop:Generator_RowEvArgName="LocationAndResourceRowChangeEvent" msprop:Generator_RowClassName="LocationAndResourceRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDMainLocation" msprop:Generator_ColumnVarNameInTable="columnIDMainLocation" msprop:Generator_ColumnPropNameInRow="IDMainLocation" msprop:Generator_ColumnPropNameInTable="IDMainLocationColumn" msprop:Generator_UserColumnName="IDMainLocation" type="xs:int" />
              <xs:element name="IDTypeOfLocation" msprop:Generator_ColumnVarNameInTable="columnIDTypeOfLocation" msprop:Generator_ColumnPropNameInRow="IDTypeOfLocation" msprop:Generator_ColumnPropNameInTable="IDTypeOfLocationColumn" msprop:Generator_UserColumnName="IDTypeOfLocation" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MainLocation" msprop:Generator_TableClassName="MainLocationDataTable" msprop:Generator_TableVarName="tableMainLocation" msprop:Generator_TablePropName="MainLocation" msprop:Generator_RowDeletingName="MainLocationRowDeleting" msprop:Generator_RowChangingName="MainLocationRowChanging" msprop:Generator_RowEvHandlerName="MainLocationRowChangeEventHandler" msprop:Generator_RowDeletedName="MainLocationRowDeleted" msprop:Generator_UserTableName="MainLocation" msprop:Generator_RowChangedName="MainLocationRowChanged" msprop:Generator_RowEvArgName="MainLocationRowChangeEvent" msprop:Generator_RowClassName="MainLocationRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IDRegion" msprop:Generator_ColumnVarNameInTable="columnIDRegion" msprop:Generator_ColumnPropNameInRow="IDRegion" msprop:Generator_ColumnPropNameInTable="IDRegionColumn" msprop:Generator_UserColumnName="IDRegion" type="xs:int" minOccurs="0" />
              <xs:element name="LevelLocation" msprop:Generator_ColumnVarNameInTable="columnLevelLocation" msprop:Generator_ColumnPropNameInRow="LevelLocation" msprop:Generator_ColumnPropNameInTable="LevelLocationColumn" msprop:Generator_UserColumnName="LevelLocation" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Enchantment" msprop:Generator_ColumnVarNameInTable="columnEnchantment" msprop:Generator_ColumnPropNameInRow="Enchantment" msprop:Generator_ColumnPropNameInTable="EnchantmentColumn" msprop:Generator_UserColumnName="Enchantment" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TypeOfFiber" msprop:Generator_TableClassName="TypeOfFiberDataTable" msprop:Generator_TableVarName="tableTypeOfFiber" msprop:Generator_TablePropName="TypeOfFiber" msprop:Generator_RowDeletingName="TypeOfFiberRowDeleting" msprop:Generator_RowChangingName="TypeOfFiberRowChanging" msprop:Generator_RowEvHandlerName="TypeOfFiberRowChangeEventHandler" msprop:Generator_RowDeletedName="TypeOfFiberRowDeleted" msprop:Generator_UserTableName="TypeOfFiber" msprop:Generator_RowChangedName="TypeOfFiberRowChanged" msprop:Generator_RowEvArgName="TypeOfFiberRowChangeEvent" msprop:Generator_RowClassName="TypeOfFiberRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="NameFiber" msprop:Generator_ColumnVarNameInTable="columnNameFiber" msprop:Generator_ColumnPropNameInRow="NameFiber" msprop:Generator_ColumnPropNameInTable="NameFiberColumn" msprop:Generator_UserColumnName="NameFiber" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LevelFiber" msprop:Generator_ColumnVarNameInTable="columnLevelFiber" msprop:Generator_ColumnPropNameInRow="LevelFiber" msprop:Generator_ColumnPropNameInTable="LevelFiberColumn" msprop:Generator_UserColumnName="LevelFiber" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Image" msprop:Generator_ColumnVarNameInTable="columnImage" msprop:Generator_ColumnPropNameInRow="Image" msprop:Generator_ColumnPropNameInTable="ImageColumn" msprop:Generator_UserColumnName="Image" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TypeOfHide" msprop:Generator_TableClassName="TypeOfHideDataTable" msprop:Generator_TableVarName="tableTypeOfHide" msprop:Generator_TablePropName="TypeOfHide" msprop:Generator_RowDeletingName="TypeOfHideRowDeleting" msprop:Generator_RowChangingName="TypeOfHideRowChanging" msprop:Generator_RowEvHandlerName="TypeOfHideRowChangeEventHandler" msprop:Generator_RowDeletedName="TypeOfHideRowDeleted" msprop:Generator_UserTableName="TypeOfHide" msprop:Generator_RowChangedName="TypeOfHideRowChanged" msprop:Generator_RowEvArgName="TypeOfHideRowChangeEvent" msprop:Generator_RowClassName="TypeOfHideRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="NameHide" msprop:Generator_ColumnVarNameInTable="columnNameHide" msprop:Generator_ColumnPropNameInRow="NameHide" msprop:Generator_ColumnPropNameInTable="NameHideColumn" msprop:Generator_UserColumnName="NameHide" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LevelHide" msprop:Generator_ColumnVarNameInTable="columnLevelHide" msprop:Generator_ColumnPropNameInRow="LevelHide" msprop:Generator_ColumnPropNameInTable="LevelHideColumn" msprop:Generator_UserColumnName="LevelHide" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Image" msprop:Generator_ColumnVarNameInTable="columnImage" msprop:Generator_ColumnPropNameInRow="Image" msprop:Generator_ColumnPropNameInTable="ImageColumn" msprop:Generator_UserColumnName="Image" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TypeOfLocation" msprop:Generator_TableClassName="TypeOfLocationDataTable" msprop:Generator_TableVarName="tableTypeOfLocation" msprop:Generator_TablePropName="TypeOfLocation" msprop:Generator_RowDeletingName="TypeOfLocationRowDeleting" msprop:Generator_RowChangingName="TypeOfLocationRowChanging" msprop:Generator_RowEvHandlerName="TypeOfLocationRowChangeEventHandler" msprop:Generator_RowDeletedName="TypeOfLocationRowDeleted" msprop:Generator_UserTableName="TypeOfLocation" msprop:Generator_RowChangedName="TypeOfLocationRowChanged" msprop:Generator_RowEvArgName="TypeOfLocationRowChangeEvent" msprop:Generator_RowClassName="TypeOfLocationRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="NameLocation" msprop:Generator_ColumnVarNameInTable="columnNameLocation" msprop:Generator_ColumnPropNameInRow="NameLocation" msprop:Generator_ColumnPropNameInTable="NameLocationColumn" msprop:Generator_UserColumnName="NameLocation" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IfWood" msprop:Generator_ColumnVarNameInTable="columnIfWood" msprop:Generator_ColumnPropNameInRow="IfWood" msprop:Generator_ColumnPropNameInTable="IfWoodColumn" msprop:Generator_UserColumnName="IfWood" type="xs:int" minOccurs="0" />
              <xs:element name="IfStone" msprop:Generator_ColumnVarNameInTable="columnIfStone" msprop:Generator_ColumnPropNameInRow="IfStone" msprop:Generator_ColumnPropNameInTable="IfStoneColumn" msprop:Generator_UserColumnName="IfStone" type="xs:int" minOccurs="0" />
              <xs:element name="IfHide" msprop:Generator_ColumnVarNameInTable="columnIfHide" msprop:Generator_ColumnPropNameInRow="IfHide" msprop:Generator_ColumnPropNameInTable="IfHideColumn" msprop:Generator_UserColumnName="IfHide" type="xs:int" minOccurs="0" />
              <xs:element name="IfFiber" msprop:Generator_ColumnVarNameInTable="columnIfFiber" msprop:Generator_ColumnPropNameInRow="IfFiber" msprop:Generator_ColumnPropNameInTable="IfFiberColumn" msprop:Generator_UserColumnName="IfFiber" type="xs:int" minOccurs="0" />
              <xs:element name="IfOre" msprop:Generator_ColumnVarNameInTable="columnIfOre" msprop:Generator_ColumnPropNameInRow="IfOre" msprop:Generator_ColumnPropNameInTable="IfOreColumn" msprop:Generator_UserColumnName="IfOre" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TypeOfOre" msprop:Generator_TableClassName="TypeOfOreDataTable" msprop:Generator_TableVarName="tableTypeOfOre" msprop:Generator_TablePropName="TypeOfOre" msprop:Generator_RowDeletingName="TypeOfOreRowDeleting" msprop:Generator_RowChangingName="TypeOfOreRowChanging" msprop:Generator_RowEvHandlerName="TypeOfOreRowChangeEventHandler" msprop:Generator_RowDeletedName="TypeOfOreRowDeleted" msprop:Generator_UserTableName="TypeOfOre" msprop:Generator_RowChangedName="TypeOfOreRowChanged" msprop:Generator_RowEvArgName="TypeOfOreRowChangeEvent" msprop:Generator_RowClassName="TypeOfOreRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="NameOre" msprop:Generator_ColumnVarNameInTable="columnNameOre" msprop:Generator_ColumnPropNameInRow="NameOre" msprop:Generator_ColumnPropNameInTable="NameOreColumn" msprop:Generator_UserColumnName="NameOre" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LevelOre" msprop:Generator_ColumnVarNameInTable="columnLevelOre" msprop:Generator_ColumnPropNameInRow="LevelOre" msprop:Generator_ColumnPropNameInTable="LevelOreColumn" msprop:Generator_UserColumnName="LevelOre" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Image" msprop:Generator_ColumnVarNameInTable="columnImage" msprop:Generator_ColumnPropNameInRow="Image" msprop:Generator_ColumnPropNameInTable="ImageColumn" msprop:Generator_UserColumnName="Image" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TypeOfRegion" msprop:Generator_TableClassName="TypeOfRegionDataTable" msprop:Generator_TableVarName="tableTypeOfRegion" msprop:Generator_TablePropName="TypeOfRegion" msprop:Generator_RowDeletingName="TypeOfRegionRowDeleting" msprop:Generator_RowChangingName="TypeOfRegionRowChanging" msprop:Generator_RowEvHandlerName="TypeOfRegionRowChangeEventHandler" msprop:Generator_RowDeletedName="TypeOfRegionRowDeleted" msprop:Generator_UserTableName="TypeOfRegion" msprop:Generator_RowChangedName="TypeOfRegionRowChanged" msprop:Generator_RowEvArgName="TypeOfRegionRowChangeEvent" msprop:Generator_RowClassName="TypeOfRegionRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="NameRegion" msprop:Generator_ColumnVarNameInTable="columnNameRegion" msprop:Generator_ColumnPropNameInRow="NameRegion" msprop:Generator_ColumnPropNameInTable="NameRegionColumn" msprop:Generator_UserColumnName="NameRegion" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Image" msprop:Generator_ColumnVarNameInTable="columnImage" msprop:Generator_ColumnPropNameInRow="Image" msprop:Generator_ColumnPropNameInTable="ImageColumn" msprop:Generator_UserColumnName="Image" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TypeOfStone" msprop:Generator_TableClassName="TypeOfStoneDataTable" msprop:Generator_TableVarName="tableTypeOfStone" msprop:Generator_TablePropName="TypeOfStone" msprop:Generator_RowDeletingName="TypeOfStoneRowDeleting" msprop:Generator_RowChangingName="TypeOfStoneRowChanging" msprop:Generator_RowEvHandlerName="TypeOfStoneRowChangeEventHandler" msprop:Generator_RowDeletedName="TypeOfStoneRowDeleted" msprop:Generator_UserTableName="TypeOfStone" msprop:Generator_RowChangedName="TypeOfStoneRowChanged" msprop:Generator_RowEvArgName="TypeOfStoneRowChangeEvent" msprop:Generator_RowClassName="TypeOfStoneRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="NameStone" msprop:Generator_ColumnVarNameInTable="columnNameStone" msprop:Generator_ColumnPropNameInRow="NameStone" msprop:Generator_ColumnPropNameInTable="NameStoneColumn" msprop:Generator_UserColumnName="NameStone" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LevelStone" msprop:Generator_ColumnVarNameInTable="columnLevelStone" msprop:Generator_ColumnPropNameInRow="LevelStone" msprop:Generator_ColumnPropNameInTable="LevelStoneColumn" msprop:Generator_UserColumnName="LevelStone" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Image" msprop:Generator_ColumnVarNameInTable="columnImage" msprop:Generator_ColumnPropNameInRow="Image" msprop:Generator_ColumnPropNameInTable="ImageColumn" msprop:Generator_UserColumnName="Image" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TypeOfWood" msprop:Generator_TableClassName="TypeOfWoodDataTable" msprop:Generator_TableVarName="tableTypeOfWood" msprop:Generator_TablePropName="TypeOfWood" msprop:Generator_RowDeletingName="TypeOfWoodRowDeleting" msprop:Generator_RowChangingName="TypeOfWoodRowChanging" msprop:Generator_RowEvHandlerName="TypeOfWoodRowChangeEventHandler" msprop:Generator_RowDeletedName="TypeOfWoodRowDeleted" msprop:Generator_UserTableName="TypeOfWood" msprop:Generator_RowChangedName="TypeOfWoodRowChanged" msprop:Generator_RowEvArgName="TypeOfWoodRowChangeEvent" msprop:Generator_RowClassName="TypeOfWoodRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="NameWood" msprop:Generator_ColumnVarNameInTable="columnNameWood" msprop:Generator_ColumnPropNameInRow="NameWood" msprop:Generator_ColumnPropNameInTable="NameWoodColumn" msprop:Generator_UserColumnName="NameWood" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LevelWood" msprop:Generator_ColumnVarNameInTable="columnLevelWood" msprop:Generator_ColumnPropNameInRow="LevelWood" msprop:Generator_ColumnPropNameInTable="LevelWoodColumn" msprop:Generator_UserColumnName="LevelWood" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Image" msprop:Generator_ColumnVarNameInTable="columnImage" msprop:Generator_ColumnPropNameInRow="Image" msprop:Generator_ColumnPropNameInTable="ImageColumn" msprop:Generator_UserColumnName="Image" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:LocationAndResource" />
      <xs:field xpath="mstns:IDMainLocation" />
      <xs:field xpath="mstns:IDTypeOfLocation" />
    </xs:unique>
    <xs:unique name="MainLocation_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MainLocation" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="TypeOfFiber_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TypeOfFiber" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="TypeOfHide_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TypeOfHide" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="TypeOfLocation_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TypeOfLocation" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="TypeOfOre_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TypeOfOre" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="TypeOfRegion_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TypeOfRegion" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="TypeOfStone_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TypeOfStone" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="TypeOfWood_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TypeOfWood" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_LocationAndResource_MainLocation" msdata:parent="MainLocation" msdata:child="LocationAndResource" msdata:parentkey="ID" msdata:childkey="IDMainLocation" msprop:Generator_UserChildTable="LocationAndResource" msprop:Generator_ChildPropName="GetLocationAndResourceRows" msprop:Generator_UserRelationName="FK_LocationAndResource_MainLocation" msprop:Generator_RelationVarName="relationFK_LocationAndResource_MainLocation" msprop:Generator_UserParentTable="MainLocation" msprop:Generator_ParentPropName="MainLocationRow" />
      <msdata:Relationship name="FK_LocationAndResource_TypeOfLocation" msdata:parent="TypeOfLocation" msdata:child="LocationAndResource" msdata:parentkey="ID" msdata:childkey="IDTypeOfLocation" msprop:Generator_UserChildTable="LocationAndResource" msprop:Generator_ChildPropName="GetLocationAndResourceRows" msprop:Generator_UserRelationName="FK_LocationAndResource_TypeOfLocation" msprop:Generator_RelationVarName="relationFK_LocationAndResource_TypeOfLocation" msprop:Generator_UserParentTable="TypeOfLocation" msprop:Generator_ParentPropName="TypeOfLocationRow" />
      <msdata:Relationship name="FK_MainLocation_TypeOfRegion" msdata:parent="TypeOfRegion" msdata:child="MainLocation" msdata:parentkey="ID" msdata:childkey="IDRegion" msprop:Generator_UserChildTable="MainLocation" msprop:Generator_ChildPropName="GetMainLocationRows" msprop:Generator_UserRelationName="FK_MainLocation_TypeOfRegion" msprop:Generator_RelationVarName="relationFK_MainLocation_TypeOfRegion" msprop:Generator_UserParentTable="TypeOfRegion" msprop:Generator_ParentPropName="TypeOfRegionRow" />
      <msdata:Relationship name="FK_TypeOfLocation_TypeOfFiber" msdata:parent="TypeOfFiber" msdata:child="TypeOfLocation" msdata:parentkey="ID" msdata:childkey="IfFiber" msprop:Generator_UserChildTable="TypeOfLocation" msprop:Generator_ChildPropName="GetTypeOfLocationRows" msprop:Generator_UserRelationName="FK_TypeOfLocation_TypeOfFiber" msprop:Generator_ParentPropName="TypeOfFiberRow" msprop:Generator_RelationVarName="relationFK_TypeOfLocation_TypeOfFiber" msprop:Generator_UserParentTable="TypeOfFiber" />
      <msdata:Relationship name="FK_TypeOfLocation_TypeOfHide" msdata:parent="TypeOfHide" msdata:child="TypeOfLocation" msdata:parentkey="ID" msdata:childkey="IfHide" msprop:Generator_UserChildTable="TypeOfLocation" msprop:Generator_ChildPropName="GetTypeOfLocationRows" msprop:Generator_UserRelationName="FK_TypeOfLocation_TypeOfHide" msprop:Generator_ParentPropName="TypeOfHideRow" msprop:Generator_RelationVarName="relationFK_TypeOfLocation_TypeOfHide" msprop:Generator_UserParentTable="TypeOfHide" />
      <msdata:Relationship name="FK_TypeOfLocation_TypeOfOre" msdata:parent="TypeOfOre" msdata:child="TypeOfLocation" msdata:parentkey="ID" msdata:childkey="IfOre" msprop:Generator_UserChildTable="TypeOfLocation" msprop:Generator_ChildPropName="GetTypeOfLocationRows" msprop:Generator_UserRelationName="FK_TypeOfLocation_TypeOfOre" msprop:Generator_RelationVarName="relationFK_TypeOfLocation_TypeOfOre" msprop:Generator_UserParentTable="TypeOfOre" msprop:Generator_ParentPropName="TypeOfOreRow" />
      <msdata:Relationship name="FK_TypeOfLocation_TypeOfStone" msdata:parent="TypeOfStone" msdata:child="TypeOfLocation" msdata:parentkey="ID" msdata:childkey="IfStone" msprop:Generator_UserChildTable="TypeOfLocation" msprop:Generator_ChildPropName="GetTypeOfLocationRows" msprop:Generator_UserRelationName="FK_TypeOfLocation_TypeOfStone" msprop:Generator_RelationVarName="relationFK_TypeOfLocation_TypeOfStone" msprop:Generator_UserParentTable="TypeOfStone" msprop:Generator_ParentPropName="TypeOfStoneRow" />
      <msdata:Relationship name="FK_TypeOfLocation_TypeOfWood" msdata:parent="TypeOfWood" msdata:child="TypeOfLocation" msdata:parentkey="ID" msdata:childkey="IfWood" msprop:Generator_UserChildTable="TypeOfLocation" msprop:Generator_ChildPropName="GetTypeOfLocationRows" msprop:Generator_UserRelationName="FK_TypeOfLocation_TypeOfWood" msprop:Generator_RelationVarName="relationFK_TypeOfLocation_TypeOfWood" msprop:Generator_UserParentTable="TypeOfWood" msprop:Generator_ParentPropName="TypeOfWoodRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>